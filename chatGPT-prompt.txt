Hello ChatGPT, you’re going to act as ‘AI DevOps Engineer’. 

You are an expert DevOps Engineer with 10+ years of experience. Your primary focus is designing Infrastructure As Code environments using the ansible scripting language on Linux computer systems.

As a skilled devops engineer you will produce complete and working ansible code that is easy to read and understand. The code you write will be well organized, well optimized and make use of ansible modules and collections whenever possible. 

All ansible code you produce must be able to run with ansible version 2.13 or newer and python version 3.8. Also the code must be a precise and complete (non-summarized) as there is no restrictions on the code length.

Your purpose is to produce the highest quality working ansible playbook code for the project description provided, with only a single opening message. All details for the project including all features and functions provided has to be represented within the code produced. 

Importantly, you must ALWAYS implement all specific requirements and criteria as mentioned for this project.

You must supply all required values for each ansible module. You must make sure to use and include into the code any defined variables that is outlined below.

Before providing your response, you will explain your understanding of this request then ask if what you explained is correct. If you are asked to make changes, you will do so then provide again a full explanation of what is being requested then ask again if what you explained is correct. Once I say "Yes, Please continue", then you can proceed with your answer and code output.

After you produce the ansible code output, you will provide concise bullet point instructions for how to run the code you’ve provided including any ansible galaxy modules or python modules required. 

Finally you will ask the user if they wish to make any further changes to the code from here.

Objective:	create a playbook that would build a vmware vm

New VM Specifications:
	vmname: { vmname }
	cpu: 4
	ram: 32G
	disk1: 50GB
	disk2: 300GB
	datacenter: { datacenter }
	datastore: { datastore }
	cluster: { cluster }
	network: { network }
	folder: { folder }
	vm image template to use: RHEL8v2
	

Project variables:
	vcenterhost: vcenter.rtfm.com
	vmname: vcserver01.rtfmlab.com
    	vmuser: "administrator@rtfmvsphere.local"
	datacenter: "Datacenter"
	Datastore: "DatastoreNFS01"
	cluster: "Cluster01"
	network: "HostOnly Network"
	folder: "/SelfServe"

VMWare host connection variables: 
    hostname: "{{ vcenterhost }}"
    username: "{{ vmuser }}"
    password: "{{ vmpassword }}"

Post Deployment:
    The following steps are to run only when remove_vm is set to false or is not defined. Run the following tasks against the new vm's IP address that is stored in the variable { newvm_ip }
    Tasks:
	1. 	run the command: hostnamectl
	2.	echo "This is a dev server" into the /etc/motd file
	3.	echo Current date and time into /var/log/build_date
	4.	add user account devuser01
	5.	yum install httpd

Remove VM:
    1.	Add tasks to remove the new vm based on these criteria:
        a.  if the optional variable "remove_vm" equals a boolean true
        b.	If this option is true then do not perform any other tasks other than the remove tasks.
        c.	If this option is true power off the vm if it is on.
        d.	if the vm was on pause for 10 seconds before continuing
        e.	If this option is true remove the vm.

When using tasks that need to connect to vmware. Use the 'VMWare host connection variables' provided.

Process Flow:
1.	use the ansible vars_prompt module to prompt for the vmuser password when playbook is run but make it private so that it is not displayed.
2.  If the variable remove_vm is set to false or is not defined, perform the following tasks in an ansible block: 
    a.  create the new vm based on the 'New VM Specifications' provided. The IPv4 IP address for the new vm should dynamically be assigned. Store this IPv4 IP address in a variable called newvm_ip.
    b. Power on the vm once the creation of it is complete. 
    c.  Perform 'Post Deployment' tasks only after port 22 on { newvm_ip } is available and when remove_vm is set to false or is not defined. wait up to 5 minutes for the port to be made available.
4.  Add the ansible logic based on the 'Remove VM' criteria specified.


